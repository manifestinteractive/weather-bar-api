{
  "name": "weatherbar-api",
  "version": "1.0.0",
  "description": "Weather Bar API",
  "license": "unliensed",
  "private": true,
  "main": "index.js",
  "engines": {
    "node": "6.x",
    "npm": "3.10.7"
  },
  "scripts": {
    "start": "./scripts/weatherbar-api.sh start",
    "start:debug": "./scripts/weatherbar-api.sh start debug",
    "stop": "./scripts/weatherbar-api.sh stop",
    "cleanup": "find ~/.forever/ -name '*.log' -delete && find ./ -name '*.log' -delete && rm -fr cleanup && npm run docs:clean",
    "docs": "jsdoc -c ./doc-conf.json -r ./app -R ./apiary.apib -d ./app/static/docs -t ./node_modules/ink-docstrap/template",
    "docs:clean": "rm -r ./app/static/docs || true",
    "test": "npm run -s lint && npm run -s coverage && npm run -s check-coverage",
    "lint": "jshint --reporter=node_modules/jshint-stylish ./app",
    "coverage": "API_NODE_ENV=test istanbul cover _mocha --recursive --require ./test/bootstrap.js ./test/**/*_test.js",
    "check-coverage": "istanbul check-coverage --statement 50 --branch 50 --function 50 --line 50",
    "migrate": "sequelize db:migrate",
    "migrate:create": "sequelize migration:create",
    "migrate:rollback": "sequelize db:migrate:undo",
    "seed": "sequelize db:seed:all",
    "seed:create": "sequelize seed:create",
    "seed:rollback": "sequelize db:seed:undo",
    "elasticsearch:create": "cd ./app && node ./elasticsearch/create && cd ../",
    "elasticsearch:update": "cd ./app && node ./elasticsearch/update && cd ../",
    "elasticsearch:delete": "cd ./app && node ./elasticsearch/delete && cd ../",
    "flatdb:download-all": "npm run -s flatdb:geo-city && npm run -s flatdb:geo-country",
    "flatdb:geo-city": "rm -f ./app/flat-db/cities.mmdb && curl -o ./app/flat-db/cities.mmdb.gz http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz && gunzip ./app/flat-db/cities.mmdb.gz",
    "flatdb:geo-country": "rm -f ./app/flat-db/countries.mmdb && curl -o ./app/flat-db/countries.mmdb.gz http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz && gunzip ./app/flat-db/countries.mmdb.gz",
    "redis:clearcache": "redis-cli -r 1 flushall",
    "help": "node node_modules/npm-scripts-help"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/manifestinteractive/weather-bar-api.git"
  },
  "author": "",
  "bugs": {
    "url": "https://github.com/manifestinteractive/weather-bar-api/issues"
  },
  "homepage": "https://github.com/manifestinteractive/weather-bar-api#readme",
  "dependencies": {
    "async": "^2.1.5",
    "bcrypt": "^0.8.7",
    "bluebird": "^3.4.6",
    "body-parser": "^1.15.2",
    "bugsnag": "^1.8.0",
    "class-extend": "^0.1.2",
    "colors": "^1.1.2",
    "convict": "^1.5.0",
    "debug": "^2.2.0",
    "dotenv": "^4.0.0",
    "elasticsearch": "^11.0.1",
    "express": "^4.14.0",
    "express-jwt": "^5.1.0",
    "express-rate-limit": "git://github.com/manifestinteractive/express-rate-limit.git#d615bcf3cb50cb67e6a6c05d220d7b86d7f82255",
    "express-session": "^1.14.1",
    "forever": "^0.15.2",
    "hashids": "^1.1.1",
    "ipaddr.js": "^1.2.0",
    "jsonwebtoken": "^7.1.9",
    "lodash": "^4.16.4",
    "logzio-nodejs": "^0.4.1",
    "mandrill-api": "^1.0.45",
    "maxmind-db-reader": "^0.2.1",
    "md5": "^2.2.1",
    "mkdirp": "^0.5.1",
    "moment": "^2.15.2",
    "moment-timezone": "^0.5.13",
    "mysql": "git://github.com/mysqljs/mysql.git#a0f2cec26ee86536dbc1c2837b92b191ca9618f1",
    "nodemon": "^1.11.0",
    "passport": "^0.3.2",
    "passport-local": "^1.0.0",
    "passport-localapikey": "0.0.3",
    "path": "^0.12.7",
    "randomstring": "^1.1.5",
    "redis": "^2.6.3",
    "request": "^2.76.0",
    "sanitizer": "^0.1.3",
    "sequelize": "^3.24.6",
    "sequelize-cli": "^2.4.0",
    "sequelize-fixtures": "^0.5.5",
    "sequelize-slugify": "^0.4.0",
    "shrink-ray": "^0.1.3",
    "slug": "0.9.1",
    "uuid": "^2.0.3",
    "validate.js": "^0.10.0",
    "validator": "^6.1.0",
    "yargs": "^6.3.0"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-flow": "^6.23.0",
    "chai": "^3.5.0",
    "chai-passport-strategy": "^1.0.0",
    "flow-bin": "^0.53.1",
    "ink-docstrap": "^1.3.0",
    "istanbul": "^0.4.5",
    "jsdoc": "^3.5.5",
    "jshint": "^2.9.4",
    "jshint-stylish": "^2.2.1",
    "mocha": "^3.1.2",
    "mock-req": "^0.2.0",
    "mock-res": "^0.3.3",
    "npm-scripts-help": "^0.7.0",
    "rewire": "^2.5.2",
    "sinon": "^1.17.6"
  },
  "optionalDependencies": {
    "fsevents": "*"
  },
  "scriptshelp": {
    "help-message": "Weather Bar API NPM Commands:",
    "help": {
      "Desciption": "Generates List of NPM Scripts you can run"
    },
    "start": {
      "Desciption": "Runs API using `forever` service after running `npm run cleanup`"
    },
    "start:debug": {
      "Desciption": "Starts the API in Debug Mode so you can see Console statements in terminal"
    },
    "stop": {
      "Desciption": "Stop API when run from `npm start` using `forever`"
    },
    "cleanup": {
      "Desciption": "Remove files & folders generated by API that are not apart of the code base"
    },
    "docs": {
      "Desciption": "Generate JSDoc Documentation"
    },
    "docs:clean": {
      "Desciption": "Remove the JSDoc Documentation Folder in `./static/docs/`"
    },
    "test": {
      "Desciption": "Runs complete test suite of Linting, Unit Tests & Code Coverage Reports"
    },
    "lint": {
      "Desciption": "Tests Javascript Code against Linting Rules"
    },
    "coverage": {
      "Desciption": "Generate Code Coverage Reports and Run Unit Tests"
    },
    "check-coverage": {
      "Desciption": "Check Coverage Reports against Minimum Requirements"
    },
    "migrate": {
      "Desciption": "Migrate to Latest Database Schema"
    },
    "migrate:create": {
      "Desciption": "Create new Migration Template file in `./app/seeders` folder"
    },
    "migrate:rollback": {
      "Desciption": "Roll Back Migration Changes"
    },
    "seed": {
      "Desciption": "Run Seeders in `./app/seeders` folder"
    },
    "seed:create": {
      "Desciption": "Create new Seeder Template file in `./app/seeders` folder"
    },
    "seed:rollback": {
      "Desciption": "Undo Seeders"
    },
    "elasticsearch:create": {
      "Desciption": "Create Elasticsearch Indexes"
    },
    "elasticsearch:update": {
      "Desciption": "Update Elasticsearch Indexes"
    },
    "elasticsearch:delete": {
      "Desciption": "Delete Elasticsearch Indexes"
    },
    "flatdb:download-all": {
      "Desciption": "Downloads All Flat Database Files used for API"
    },
    "flatdb:geo-city": {
      "Desciption": "Downloads and Unzips GeoLite2 City from MaxMind"
    },
    "flatdb:geo-country": {
      "Desciption": "Downloads and Unzips GeoLite2 Country from MaxMind"
    },
    "prepublish": {
      "Desciption": "Runs any commands necessary before publishing API"
    },
    "redis:clearcache": {
      "Desciption": "Clear Redis Cache"
    }
  }
}
